// Generated by CoffeeScript 1.6.3
(function() {
  var getInputElementsByTypeAndValue, getPathTo, pseudoGuid;

  getInputElementsByTypeAndValue = function(inputType, inputValue) {
    var allDocumentInputElements, inputElement, result, _i, _len;
    allDocumentInputElements = document.getElementsByTagName('input');
    result = new Array();
    for (_i = 0, _len = allDocumentInputElements.length; _i < _len; _i++) {
      inputElement = allDocumentInputElements[_i];
      if (inputElement.type === inputType && inputElement.value === inputValue) {
        result.push(inputElement);
      }
    }
    return result;
  };

  getPathTo = function(element) {
    var elementTagName, ix, sibling, siblingTagName, siblings, _i, _len;
    elementTagName = element.tagName.toLowerCase();
    if (element.id && document.getElementById(element.id) === element) {
      return 'id("#{element.id}")';
    } else if (element.name && document.getElementsByName(element.name).length === 1) {
      return "//" + elementTagName + "[@name='" + element.name + "']";
    } else if (elementTagName === "input" && getInputElementsByTypeAndValue("submit", element.value).length === 1) {
      /* 
      Avoid using Russian in @value. Allow only English
      Bug #18 - ERROR Object reference not set to an instance of an object.
      */

      if (element.value.match(/^[a-zA-Z0-9 \!\"\#\$\%\&\'\(\)\*\+\,\-\.\/\:\;\<\=\>\?\@\[\\\]\^_\`\{\|\}\~]*$/)) {
        return "input[@type='submit' and @value='" + element.value + "']";
      } else {
        console.log("SWD: Value skipped: " + element.value);
      }
    }
    if (element === document.body) {
      return "/html/" + elementTagName;
    }
    ix = 0;
    siblings = element.parentNode.childNodes;
    for (_i = 0, _len = siblings.length; _i < _len; _i++) {
      sibling = siblings[_i];
      if (sibling === element) {
        return "" + (getPathTo(element.parentNode)) + "/" + elementTagName + "[" + (ix + 1) + "]";
      }
      siblingTagName = sibling.tagName.toLowerCase();
      elementTagName = element.tagName.toLowerCase();
      if (sibling.nodeType === 1 && siblingTagName === elementTagName) {
        ix++;
      }
    }
  };

  pseudoGuid = function() {
    var result;
    result = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';
    result = result.replace(/[xy]/g, function(re_match) {
      var random_value, replacement;
      random_value = Math.random() * 16 | 0;
      replacement = re_match === 'x' ? random_value : random_value & 0x3 | 0x8;
      return replacement.toString(16);
    });
    return result;
  };

}).call(this);
